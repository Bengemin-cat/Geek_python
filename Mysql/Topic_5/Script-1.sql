-- 1)Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.
UPDATE users
SET created_at = NOW()
WHERE created_at is NULL;

UPDATE users
SET updated_at = NOW()
WHERE updated_at is NULL;
-----------------------------------------------------------------------------------
/*
2)Таблица users была неудачно спроектирована. 
Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате "20.10.2017 8:10". 
Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.
*/

ALTER TABLE users CHANGE 
COLUMN created_at created_at DATETIME NOT NULL DEFAULT '{}';

ALTER TABLE users CHANGE 
COLUMN updated_at updated_at DATETIME NOT NULL DEFAULT '{}';
-------------------------------------------------------------------------------------
/*3)В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 
	0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, 
	чтобы они выводились в порядке увеличения значения value. Однако, нулевые запасы должны выводиться в конце, после всех записей.
*/
SELECT * FROM storehouses_products
ORDER BY IF(value > 0 , value, POW(2,64)-1);  
-------------------------------------------------------------------------------------
/*
4)(по желанию) Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. 
	Месяцы заданы в виде списка английских названий ('may', 'august')
*/
SELECT * FROM users
WHERE 
	birthmonth RLIKE 'may|august';

-------------------------------------------------------------------------------------
/*
5)(по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. 
SELECT * FROM catalogs WHERE id IN (5, 1, 2); 
Отсортируйте записи в порядке, заданном в списке IN.
*/
SELECT * FROM catalogs 
WHERE id IN (5, 1, 2)
ORDER BY id=5 DESC, id=1 DESC, id=2 DESC;

-------------------------------------------------------------------------------------



-- 1)Подсчитайте средний возраст пользователей в таблице users
SELECT AVG(TIMESTAMPDIFF(YEAR, birthday_at, NOW())) FROM users;
-------------------------------------------------------------------------------------


/*2)Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. 
Следует учесть, что необходимы дни недели текущего года, а не года рождения.
*/
SELECT COUNT(*)
FROM users
ORDER BY 
	WEEKDAY(CONCAT_WS('-', CAST(YEAR(NOW())),CAST(MONTH(birthday_at)),CAST(DAY(birthday_at)))); 
	